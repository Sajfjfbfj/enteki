<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charSet="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  {/* ===========================
       ファビコン・PWA設定（フル）
  ============================ */}
  <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png" />
  <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png" />
  <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png" />
  <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png" />
  <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png" />
  <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png" />
  <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png" />
  <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png" />
  <link rel="icon" type="image/png" sizes="192x192" href    tailwind.config = {
      darkMode: "class",
      theme: {
        extend: {
          colors: {
            "primary": "#1969e1",
            "background-light": "#f6f7f8",
            "background-dark": "#111721"
          },
          fontFamily: {
            "display": ["Manrope", "Yu Gothic", "Hiragino Maru Gothic ProN", "sans-serif"]
          }
        }
      }
    }
  </script>

  <!-- Fonts / Shepherd CSS -->
  <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@400;500;700;800&display=swap" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/shepherd.js/dist/css/shepherd.css">

  <style>
    body { padding-bottom: 120px; }
    .app-card { transition: transform .18s ease, box-shadow .18s ease; }
    .app-card:hover { transform: translateY(-4px); box-shadow: 0 18px 30px rgba(0,0,0,.08); }
    .center-tab-button { position: relative; top: -20px; width:64px; height:64px; border-radius:50%; display:flex; align-items:center; justify-content:center; background:linear-gradient(135deg,#1969e1,#1557c7); color:white; border:none; box-shadow:0 8px 24px rgba(25,105,225,0.4); }
    .tab-content { display:none; }
    .tab-content.active { display:block; }
    .player-score-input { width:54px; max-width:54px; }
    @media (min-width:768px){ .player-score-input{ width:64px; } }
    .canvas-container{ width:100%; max-width:600px; margin:0 auto; aspect-ratio:1/1; position:relative; }
    .canvas-container canvas{ width:100% !important; height:100% !important; display:block; }
  </style>
</head>

<body class="bg-background-light dark:bg-background-dark font-display text-slate-800 dark:text-slate-200">
  <div class="flex flex-col min-h-screen">

    <!-- Header -->
    <header class="sticky top-0 z-20 bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm border-b border-slate-100 dark:border-slate-800">
      <div class="container mx-auto px-4 py-3 flex items-center justify-between">
        <h1 class="text-lg font-bold text-slate-900 dark:text-white">MATOMA遠的</h1>
        <div class="flex items-center gap-2">
          <button id="shareBtn" class="px-4 py-2 bg-primary text-white rounded-full text-sm font-semibold shadow-md">共有</button>
          <button id="settingsBtn" class="p-2 rounded-full bg-slate-200 dark:bg-slate-700 text-slate-700 dark:text-slate-200" title="設定">
            <span class="material-symbols-outlined text-2xl">settings</span>
          </button>
        </div>
      </div>
    </header>
    <!-- タブ切り替え -->
    <div class="container mx-auto px-4 py-4">
      <div class="flex gap-2 justify-center">
        <button id="personalTabBtn" class="px-4 py-2 rounded-lg font-semibold bg-primary text-white">個人用</button>
        <button id="teamTabBtn" class="px-4 py-2 rounded-lg font-semibold bg-slate-200 dark:bg-slate-700 text-slate-800 dark:text-white">団体用</button>
      </div>
    </div>

    <!-- メイン -->
    <main class="flex-grow container mx-auto px-4 pb-12">

      <!-- ===========================
           個人用タブ（統合済み）
      ============================ -->
      <section id="personalTab" class="tab-content active">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- 日付選択 -->
          <section class="app-card bg-white dark:bg-slate-900 p-5 rounded-2xl shadow-lg" id="matchDateSection">
            <label for="matchDate" class="block mb-3 font-bold text-slate-800 dark:text-slate-200 flex items-center gap-2">
              <span class="material-symbols-outlined text-primary">calendar_today</span>
              日付選択
            </label>
            <input type="date" id="matchDate" class="w-full rounded-xl border-2 border-slate-200 dark:border-slate-700 px-4 py-3 text-slate-800 dark:text-slate-200 bg-white dark:bg-slate-800 focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all">
          </section>

          <!-- 日別集計 -->
          <section id="dailySummary">
            <h2 class="text-xl font-bold mb-3 text-slate-900 dark:text-white">日別集計</h2>
            <div class="app-card bg-white dark:bg-slate-900 rounded-2xl shadow-lg p-5">
              <div class="flex items-center gap-3 text-slate-500 dark:text-slate-400">
                <span class="material-symbols-outlined text-3xl text-primary">analytics</span>
                <p class="text-sm">ここに日別集計（立ち数・合計点）が表示されます</p>
              </div>
            </div>
          </section>
        </div>

        <!-- 立ちセット -->
        <section class="mt-6">
          <h2 class="text-xl font-bold mb-4 text-slate-900 dark:text-white">立ちセット</h2>
          <div id="setsContainer" class="space-y-4"></div>
        </section>

        <!-- チュートリアルボタン（PC表示） -->
        <div class="hidden md:block fixed bottom-24 right-4 z-50">
          <button id="tutorialBtn" class="px-5 py-3 text-sm sm:text-base bg-primary text-white rounded-full shadow-xl hover:bg-primary/90 font-semibold transition-all hover:scale-105">初めての方へ</button>
        </div>

        <!-- チュートリアルボタン（スマホ表示） -->
        <div class="md:hidden w-full py-3 bg-background-light dark:bg-background-dark">
          <div class="container mx-auto px-4 flex justify-center">
            <button id="tutorialBtnMobile" class="px-6 py-3 text-base bg-primary text-white rounded-full shadow-lg hover:bg-primary/90 font-semibold transition-all">初めての方へ</button>
          </div>
        </div>
      </section>
      <!-- ===========================
           団体用タブ（元の構造そのまま）
      ============================ -->
      <section id="teamTab" class="tab-content">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- ルーム設定 -->
          <section id="teamRoomSection" class="app-card bg-white dark:bg-slate-900 p-5 rounded-2xl shadow-lg">
            <h2 class="text-xl font-bold mb-3 text-slate-900 dark:text-white flex items-center gap-2">
              <span class="material-symbols-outlined text-primary">groups</span>
              団体ルーム設定
            </h2>

            <div class="mb-3">
              <label for="roomName" class="block mb-2 font-semibold text-slate-700 dark:text-slate-300">ルーム名</label>
              <input type="text" id="roomName" placeholder="例：大会Aチーム" class="w-full rounded-xl border-2 border-slate-200 dark:border-slate-700 px-4 py-2 text-slate-800 dark:text-slate-200 bg-white dark:bg-slate-800 focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all">
            </div>

            <div class="flex flex-wrap gap-2">
              <button id="generateQrBtn" class="flex-1 bg-primary text-white px-4 py-2 rounded-lg font-semibold shadow hover:bg-primary/90 transition">QRコード生成</button>
              <button id="clearRoomBtn" class="flex-1 bg-red-500 text-white px-4 py-2 rounded-lg font-semibold shadow hover:bg-red-600 transition">リセット</button>
            </div>

            <div id="qrContainer" class="mt-4 flex justify-center"></div>
          </section>

          <!-- メンバー一覧 -->
          <section id="teamMembersSection" class="app-card bg-white dark:bg-slate-900 p-5 rounded-2xl shadow-lg">
            <h2 class="text-xl font-bold mb-3 text-slate-900 dark:text-white flex items-center gap-2">
              <span class="material-symbols-outlined text-primary">person</span>
              メンバー一覧
            </h2>

            <div id="membersContainer" class="space-y-3">
              <!-- JSでメンバー入力フォームを生成 -->
            </div>

            <div class="mt-4 flex justify-center">
              <button id="addMemberBtn" class="px-5 py-2 bg-primary text-white rounded-lg font-semibold shadow hover:bg-primary/90 transition">メンバー追加</button>
            </div>
          </section>
        </div>

        <!-- 団体スコア入力エリア -->
        <section id="teamScoresSection" class="mt-8 app-card bg-white dark:bg-slate-900 p-5 rounded-2xl shadow-lg">
          <h2 class="text-xl font-bold mb-4 text-slate-900 dark:text-white flex items-center gap-2">
            <span class="material-symbols-outlined text-primary">scoreboard</span>
            団体スコア管理
          </h2>

          <div class="overflow-x-auto">
            <table class="min-w-full border border-slate-200 dark:border-slate-700 text-sm text-slate-700 dark:text-slate-200">
              <thead class="bg-slate-100 dark:bg-slate-800">
                <tr>
                  <th class="px-3 py-2 text-left">メンバー名</th>
                  <th class="px-3 py-2 text-center">立ち数</th>
                  <th class="px-3 py-2 text-center">合計点</th>
                  <th class="px-3 py-2 text-center">平均</th>
                  <th class="px-3 py-2 text-center">操作</th>
                </tr>
              </thead>
              <tbody id="teamScoresTable">
                <!-- JSで動的に行を追加 -->
              </tbody>
            </table>
          </div>

          <div class="mt-6 flex justify-center">
            <button id="analyzeBtnTeam" class="px-6 py-3 bg-primary text-white rounded-full shadow hover:bg-primary/90 font-semibold transition">分析開始</button>
          </div>
        </section>

        <!-- 結果・統計 -->
        <section id="teamResultSection" class="mt-8 app-card bg-white dark:bg-slate-900 p-5 rounded-2xl shadow-lg">
          <h2 class="text-xl font-bold mb-4 text-slate-900 dark:text-white flex items-center gap-2">
            <span class="material-symbols-outlined text-primary">bar_chart</span>
            結果分析
          </h2>

          <div id="teamResultContainer" class="text-slate-700 dark:text-slate-300">
            <p class="text-sm">分析ボタンを押すと結果がここに表示されます。</p>
          </div>
        </section>
      </section>
    </main>

    <!-- ===========================
         下部ナビゲーションバー
    ============================ -->
    <nav class="fixed bottom-0 left-0 right-0 z-40 bg-white/90 dark:bg-slate-900/90 border-t border-slate-100 dark:border-slate-800">
      <div class="max-w-5xl mx-auto px-4 py-2 flex items-end justify-around relative">
        <a href="tools.html" class="flex flex-col items-center gap-1 py-1 px-2 text-slate-500 dark:text-slate-400">
          <span class="material-symbols-outlined text-2xl">construction</span>
          <span class="text-xs font-semibold">道具</span>
        </a>
        <a href="index.html" class="flex flex-col items-center gap-1 py-1 px-2 text-primary">
          <span class="material-symbols-outlined text-2xl">today</span>
          <span class="text-xs font-semibold">今日の記録</span>
        </a>

        <button id="addSetBtnTab" class="center-tab-button" title="立ちセットを追加">
          <span class="material-symbols-outlined text-3xl">add_circle</span>
        </button>

        <a href="yadokoro.html" class="flex flex-col items-center gap-1 py-1 px-2 text-slate-500 dark:text-slate-400">
          <span class="material-symbols-outlined text-2xl">analytics</span>
          <span class="text-xs font-semibold">分析</span>
        </a>
        <a href="help.html" class="flex flex-col items-center gap-1 py-1 px-2 text-slate-500 dark:text-slate-400">
          <span class="material-symbols-outlined text-2xl">help</span>
          <span class="text-xs font-semibold">ヘルプ</span>
        </a>
      </div>
    </nav>
  </div>

  <!-- ===========================
       スクリプト群（統合版）
  ============================ -->

  <!-- 外部ライブラリ -->
  <script src="https://cdn.jsdelivr.net/npm/shepherd.js/dist/js/shepherd.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/qrcodejs/qrcode.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lz-string/libs/lz-string.min.js"></script>

  <!-- 共通スクリプト -->
  <script src="js/main.js"></script>
  <script src="js/matchSet.js"></script>
  <script src="js/navbar.js"></script>
  <script src="js/page.js"></script>

  <!-- ===========================
       個人用スクリプト
  ============================ -->
  <script>
  document.addEventListener("DOMContentLoaded", () => {
    // --- 共有ボタン ---
    const shareBtn = document.getElementById("shareBtn");
    if (shareBtn) {
      shareBtn.addEventListener("click", async () => {
        const shareText = "矢所分析アプリ MATOMA遠的 で遠的記録してみよう！";
        const shareUrl = window.location.href;
        if (navigator.share) {
          try {
            await navigator.share({ title: "MATOMA遠的", text: shareText, url: shareUrl });
          } catch (err) { console.error("Share failed:", err); }
        } else {
          try {
            await navigator.clipboard.writeText(`${shareText} ${shareUrl}`);
            alert("リンクをコピーしました。");
          } catch {
            prompt("コピーに失敗しました。手動でコピーしてください:", `${shareText} ${shareUrl}`);
          }
        }
      });
    }

    // --- チュートリアル機能 ---
    const createTour = () => {
      const tour = new Shepherd.Tour({
        defaultStepOptions: {
          classes: 'shadow-lg rounded-md bg-white dark:bg-slate-800 p-4',
          scrollTo: true,
          cancelIcon: { enabled: true }
        }
      });
      tour.addStep({ id:'step-1', text:'日付を選択します', attachTo:{element:'#matchDateSection', on:'bottom'}, buttons:[{text:'次へ', action: tour.next}] });
      tour.addStep({ id:'step-2', text:'日別集計がここに表示されます', attachTo:{element:'#dailySummary', on:'bottom'}, buttons:[{text:'前へ', action: tour.back},{text:'次へ', action: tour.next}] });
      tour.addStep({ id:'step-3', text:'下部の「立ち追加」ボタンで新しい立ちを作ります', attachTo:{element:'#addSetBtnTab', on:'top'}, buttons:[{text:'前へ', action: tour.back},{text:'次へ', action: tour.next}] });
      tour.addStep({ id:'step-4', text:'的をタップすると点数が付き、外に出すと消えます', attachTo:{element:'#setsContainer', on:'top'}, buttons:[{text:'前へ', action: tour.back},{text:'次へ', action: tour.next}] });
      tour.addStep({ id:'step-5', text:'リセットで内容、削除で立ちごと削除', attachTo:{element:'#setsContainer', on:'top'}, buttons:[{text:'前へ', action: tour.back},{text:'終了', action: tour.complete}] });
      return tour;
    };

    if (!localStorage.getItem('hasSeenTour_personal')) {
      createTour().start();
      localStorage.setItem('hasSeenTour_personal', 'true');
    }

    document.querySelectorAll('#tutorialBtn, #tutorialBtnMobile').forEach(btn => {
      if (btn) btn.addEventListener('click', () => createTour().start());
    });

    // --- テーマ反映 ---
    const theme = localStorage.getItem("theme");
    document.documentElement.classList.toggle("dark", theme === "dark");

    // --- 設定ボタン ---
    const settingsBtn = document.getElementById("settingsBtn");
    if (settingsBtn) settingsBtn.addEventListener("click", () => {
      window.location.href = "settings.html";
    });
  });
  </script>

  <!-- ===========================
       団体用スクリプト
  ============================ -->
  <script>
  document.addEventListener("DOMContentLoaded", () => {
    const qrContainer = document.getElementById("qrContainer");
    const generateQrBtn = document.getElementById("generateQrBtn");
    const clearRoomBtn = document.getElementById("clearRoomBtn");
    const roomNameInput = document.getElementById("roomName");
    const membersContainer = document.getElementById("membersContainer");
    const addMemberBtn = document.getElementById("addMemberBtn");
    const teamScoresTable = document.getElementById("teamScoresTable");
    const analyzeBtnTeam = document.getElementById("analyzeBtnTeam");
    const resultContainer = document.getElementById("teamResultContainer");

    const renderQR = (text) => {
      qrContainer.innerHTML = "";
      new QRCode(qrContainer, {
        text, width: 180, height: 180, colorDark: "#000", colorLight: "#fff", correctLevel: QRCode.CorrectLevel.H
      });
    };

    if (generateQrBtn) {
      generateQrBtn.addEventListener("click", () => {
        const room = roomNameInput.value.trim();
        if (!room) return alert("ルーム名を入力してください。");
        renderQR(`https://enteki.vercel.app/?room=${encodeURIComponent(room)}`);
      });
    }

    if (clearRoomBtn) {
      clearRoomBtn.addEventListener("click", () => {
        roomNameInput.value = "";
        qrContainer.innerHTML = "";
        membersContainer.innerHTML = "";
        teamScoresTable.innerHTML = "";
        resultContainer.innerHTML = "<p class='text-sm'>分析ボタンを押すと結果がここに表示されます。</p>";
      });
    }

    if (addMemberBtn) {
      addMemberBtn.addEventListener("click", () => {
        const div = document.createElement("div");
        div.className = "flex gap-2 items-center";
        div.innerHTML = `
          <input type="text" placeholder="名前" class="flex-1 rounded-lg border border-slate-300 dark:border-slate-600 px-3 py-2 bg-white dark:bg-slate-800">
          <button class="removeMember bg-red-500 text-white px-2 py-1 rounded-md text-sm">削除</button>
        `;
        membersContainer.appendChild(div);

        div.querySelector(".removeMember").addEventListener("click", () => div.remove());
      });
    }

    if (analyzeBtnTeam) {
      analyzeBtnTeam.addEventListener("click", () => {
        const members = membersContainer.querySelectorAll("input[type='text']");
        if (members.length === 0) return alert("メンバーを追加してください。");

        let html = "<ul class='list-disc ml-6'>";
        members.forEach(input => {
          const name = input.value || "（未入力）";
          html += `<li>${name} の分析結果：平均○点（仮）</li>`;
        });
        html += "</ul>";
        resultContainer.innerHTML = html;
      });
    }
  });
  </script>

  <!-- ===========================
       Service Worker 登録
  ============================ -->
  <script>
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
      navigator.serviceWorker.register('/service-worker-v1.0.6.js')
        .then(reg => console.log('✅ Service Worker registered:', reg))
        .catch(err => console.error('❌ SW registration failed:', err));
    });
  }
  </script>

</body>
</html>
